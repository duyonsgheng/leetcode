1.螺旋打印
    从中心往外打印 ： 左上角每次减减，右下角每次加加，一圈一圈的搞
    从外往中心点打印：左上角每次加加，右下角每次减减，一圈一圈的搞

2.概率DP
    1.当前还有50次可以扔，必须要扔出35次 >= 100的概率 就是 more *(49,34)
    2.当前还有50次可以扔，必须要扔出35次 >= 100的概率 就是 less *(49,35)

3.概率dp
    8个方向



4.窗口
    1  1  1 0 0 0 0
    a  b  c d e f g
    b c位置的1要去 d和e，那么 距离就是 (d+e)-(b+c)
    那么流程就是当前窗口分为两半，左边去找，右边去找，如果左边的1不够当前窗口的一半，那么当前窗口窗口往下滑，因为当前窗口一定不是最优的

5.最低公共祖先，树形dp ，见体系班快乐值问题。

    1.当前节点价值决定减半
        后代一定不能减半
    2.当前节点价值决定不减半
        那么后代可以减半，可以不减半，然后选择所有决策中的最小值

    所以往上返回 当前节点减半的最小和当前节点不减半的最小

    那么现在怎么才能更快的得到每次旅行经过了哪些点，经过的点词频+1
    开始点和结束点都给一个1，他们的最低公共祖先给一个-1，最低公共祖先的父节点也给一个-1，最后统计的时候每一个点的词频就能求对 。 差分的思路

    那么最低公共祖先就是tarjan算法

    遍历的时候边遍历，边打tag，当当前节点的左孩子和右孩子都遍历结束了给当前节点打tag。