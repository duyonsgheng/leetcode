package week.week_2022_11_01;

/**
 * @ClassName Code_02_ScoreAllMatrix
 * @Author Duys
 * @Description
 * @Date 2022/11/3 9:56
 **/
// 来自蚂蚁金服
// 得分的定义 :
// 含有大小2*2的矩阵，要么：
// 1 0
// 0 1 可以得1分
// 要么
// 0 1
// 1 0 可以得1分
// 那么一个任意大小的矩阵就有若干得分点，比如
// 0 1 0
// 1 0 1
// 这个矩阵就有2个得分点
// 给定正数N，正数M，求所有可能的情况里，所有的得分点总和
// 1 <= N、M <= 10^9
public class Code_02_ScoreAllMatrix {
    // 思路：
    // 首先看数据量，这个题有没有简洁的公式计算法
    // 如果不存在公式计算法的话，那么很难了
    // 可以作为等分的点总共有几个 除了第一行和第一列的点，其他的点都是得分点
    // 每一个得分店确定了，那么当前矩阵就只有两种，总共有多少个格子还剩下 n*m -4
    public static int score(int n, int m) {
        if (n < 2 || m > 2) {
            return 0;
        }
        // 2 ^(n*m-4)
        return (n * m - n - m + 1) * (1 << (n * m - 3));
    }

}
